// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication_HibaVonal;

#nullable disable

namespace WebApplication_HibaVonal.Migrations
{
    [DbContext(typeof(ErrorLineDbContext))]
    [Migration("20250316185737_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication_HibaVonal.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.IssueReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ReporterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ReporterId");

                    b.HasIndex("WorkerId");

                    b.ToTable("IssueReports");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.IssueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IssueTypes");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("ArrivalDate")
                        .HasColumnType("date");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.OrderEquipmentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderEquipmentItems");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Admin", b =>
                {
                    b.HasBaseType("WebApplication_HibaVonal.User");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("WebApplication_HibaVonal.MaintananceManager", b =>
                {
                    b.HasBaseType("WebApplication_HibaVonal.User");

                    b.ToTable("MaintananceManagers", (string)null);
                });

            modelBuilder.Entity("WebApplication_HibaVonal.MaintananceWorker", b =>
                {
                    b.HasBaseType("WebApplication_HibaVonal.User");

                    b.ToTable("MaintananceWorkers", (string)null);
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Student", b =>
                {
                    b.HasBaseType("WebApplication_HibaVonal.User");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasIndex("RoomId");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("WebApplication_HibaVonal.IssueReport", b =>
                {
                    b.HasOne("WebApplication_HibaVonal.IssueType", "IssueType")
                        .WithMany("Reports")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication_HibaVonal.Location", "Location")
                        .WithMany("Reports")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication_HibaVonal.Student", "Reporter")
                        .WithMany("Reports")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication_HibaVonal.MaintananceWorker", "MaintananceWorker")
                        .WithMany("AssignedReports")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IssueType");

                    b.Navigation("Location");

                    b.Navigation("MaintananceWorker");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Order", b =>
                {
                    b.HasOne("WebApplication_HibaVonal.MaintananceManager", "Manager")
                        .WithMany("Orders")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.OrderEquipmentItem", b =>
                {
                    b.HasOne("WebApplication_HibaVonal.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication_HibaVonal.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Admin", b =>
                {
                    b.HasOne("WebApplication_HibaVonal.User", null)
                        .WithOne()
                        .HasForeignKey("WebApplication_HibaVonal.Admin", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication_HibaVonal.MaintananceManager", b =>
                {
                    b.HasOne("WebApplication_HibaVonal.User", null)
                        .WithOne()
                        .HasForeignKey("WebApplication_HibaVonal.MaintananceManager", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication_HibaVonal.MaintananceWorker", b =>
                {
                    b.HasOne("WebApplication_HibaVonal.User", null)
                        .WithOne()
                        .HasForeignKey("WebApplication_HibaVonal.MaintananceWorker", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Student", b =>
                {
                    b.HasOne("WebApplication_HibaVonal.User", null)
                        .WithOne()
                        .HasForeignKey("WebApplication_HibaVonal.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication_HibaVonal.Location", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.IssueType", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Location", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.MaintananceManager", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.MaintananceWorker", b =>
                {
                    b.Navigation("AssignedReports");
                });

            modelBuilder.Entity("WebApplication_HibaVonal.Student", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
